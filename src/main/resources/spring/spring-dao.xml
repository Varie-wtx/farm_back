<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合mybatis过程
    1.配置数据库相关参数-->
    <context:property-placeholder location="classpath*:jdbc.properties" ignore-unresolvable="true"/>
    <!--2.数据库连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!--配置连接池属性-->
        <property name="driverClassName" value="${db.driverClassName}"/>

        <!-- 基本属性 url、User、password -->
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" /> <!--连接池最大使用连接数量 -->
        <property name="maxActive" value="20" /> <!--连接池最小空闲-->
        <property name="minIdle" value="0" /> <!--获取连接最大等待时间-->
        <property name="maxWait" value="60000" />
        <property name="poolPreparedStatements" value="true" />

        <property name="validationQuery" value="${db.validationQuery}" />    <!-- 解决了第一次启动慢的问题 -->
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" /> <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000" /> <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="25200000" /> <!--打开removeAbandoned功能-->
        <property name="removeAbandoned" value="true" /> <!--1800秒，也就是30分钟-->
        <property name="removeAbandonedTimeout" value="1800" /> <!--关闭abanded连接时输出错误日志-->
        <property name="logAbandoned" value="true" /><!-- 监控数据库 -->


    </bean>

    <!--约定大于配置-->
    <!--３.配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--往下才是mybatis和spring真正整合的配置-->
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包,使用别名,多个用;隔开-->
        <property name="typeAliasesPackage" value="com.taoroot.pojo"/>
    </bean>

    <!--４:配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的Dao接口-->
        <property name="basePackage" value="com.taoroot.dao"/>
    </bean>

    <!--redisDao-->
    <!--  <bean id="redisDao" class="com.ny.dao.cache.RedisDao">
         <constructor-arg index="0" value="localhost"/>
         <constructor-arg index="1" value="6379"/>
     </bean> -->
</beans>